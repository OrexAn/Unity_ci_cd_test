name: unity-build
run-name: ${{ github.actor }} is learning GitHub Actions
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Unity
        uses: game-ci/setup-unity@v1
        with:
          unity-version: 2022.3.1f1
          components: Unity, Windows

      - name: Build Unity project
        run: |
          unity -batchmode -projectPath . -executeMethod BuildScript.BuildWindowsStandalone -quit

      # Additional steps for handling build output, testing, and deployment can be added here
      
      # Upload build artifact to GitHub Releases
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Find build artifacts
        run: |
          EXECUTABLE_PATH=$(find ${{ github.workspace }} -type f -name "*.exe")
          EXECUTABLE_NAME=$(basename "$EXECUTABLE_PATH")
          echo "::set-output name=executable_name::$EXECUTABLE_NAME"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_artifacts.outputs.executable_path }}
          asset_name: ${{ steps.find_artifacts.outputs.executable_name }}
          asset_content_type: application/octet-stream
      
      # Cleanup step
      - name: Clean up workspace
        run: |
          # Delete temporary files or directories
          rm -rf /path/to/temporary/files
          
          # Remove any generated artifacts
          rm -rf /path/to/generated/artifacts

          # Additional cleanup tasks as needed
